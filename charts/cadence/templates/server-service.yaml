apiVersion: v1
kind: Service
metadata:
  name: cadence-frontend
  labels:
    app: cadence
    component: frontend
    {{- include "cadence.commonlabels" . | nindent 4 }}
spec:
  type: ClusterIP
  selector:
    app: cadence
    component: frontend
  ports:
    - name: rpc
      protocol: TCP
      port: {{ $.Values.frontend.port }}
      targetPort: rpc
    - name: grpc
      protocol: TCP
      port: {{ $.Values.frontend.grpcPort }}
      targetPort: grpc

---

{{- $dot := . }}
{{- range $service := (list "frontend" "history" "matching" "worker") }}
{{- $serviceCfg := index $.Values $service -}}
# Create headless service for each Cadence service
apiVersion: v1
kind: Service
metadata:
  name: cadence-{{ $service }}-headless
  labels:
    app: cadence
    component: {{ $service }}
    {{- include "cadence.commonlabels" $dot | nindent 4 }}
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  selector:
    app: cadence
    component: {{ $service }}
  ports:
    - name: rpc
      protocol: TCP
      port: {{ $serviceCfg.port }}
      targetPort: rpc
    {{- if $dot.Values.metrics.enabled }}
    - name: {{ $dot.Values.metrics.portName }}
      protocol: TCP
      port: {{ $dot.Values.metrics.port }}
      targetPort: {{ $dot.Values.metrics.portName }}
    {{- end }}
    {{- if ne $service "worker" }}
    - name: grpc
      protocol: TCP
      port: {{ $serviceCfg.grpcPort }}
      targetPort: grpc
    {{- end}}

---
{{- end}}
