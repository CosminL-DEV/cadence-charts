{{- $dot := . }}
{{- range $service := (list "frontend" "history" "matching" "worker") }}
{{- $serviceCfg := index $.Values $service -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cadence-{{ $service }}
  labels:
    app: cadence
    component: {{ $service }}
    {{- include "cadence.commonlabels" $dot | nindent 4 }}
spec:
  replicas: {{ $serviceCfg.replicas }}
  selector:
    matchLabels:
      app: cadence
      component: {{ $service }}
  template:
    metadata:
      labels:
        app: cadence
        component: {{ $service }}
    spec:
      initContainers:
        - name: wait-for-schema
          image: {{ $serviceCfg.image.repository }}:{{ $serviceCfg.image.tag }}
          imagePullPolicy: Always
          command: ["sh", "-c", "
      until cqlsh $CASSANDRA_ENDPOINT 9042 -e \"
        USE cadence;
        SELECT curr_version FROM schema_version WHERE keyspace_name = 'cadence';\" | grep -q {{ $.Values.cassandra.schema.version }} &&
      cqlsh  $CASSANDRA_ENDPOINT 9042 -e \"
        USE cadence_visibility;
        SELECT curr_version FROM schema_version WHERE keyspace_name = 'cadence_visibility';\" | grep -q {{ $.Values.cassandra.schema.visibility_version }};
      do
        echo waiting for both cadence and cadence_visibility schema setup;
        sleep 10;
      done"]
          env:
            - name: CASSANDRA_ENDPOINT
              value: {{ include "cassandra.endpoint" $dot }}
      containers:
        - name: cadence-{{ $service }}
          image: {{ $serviceCfg.image.repository }}:{{ $serviceCfg.image.tag }}
          imagePullPolicy: Always
          ports:
            - name: rpc
              containerPort: {{ $serviceCfg.port }}
              protocol: TCP
            {{- if $dot.Values.metrics.enabled }}
            - name: {{ $dot.Values.metrics.portName }}
              containerPort: {{ $dot.Values.metrics.port }}
              protocol: TCP
            {{- end }}
             {{- if ne $service "worker" }}
            - name: grpc
              containerPort: {{ $serviceCfg.grpcPort }}
              protocol: TCP
            {{- end}}
          volumeMounts:
            - name: config
              mountPath: /etc/cadence/config/dynamicconfig/config.yaml
              subPath: dynamic_config.yaml
          env:
            - name: SERVICES
              value: {{ $service }}
            - name: BIND_ON_IP
              value: 0.0.0.0
            - name: BROADCAST_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CASSANDRA_SEEDS
              value:  {{ include "cassandra.endpoint" $dot }}
            - name: PROMETHEUS_ENDPOINT
              value: :9090
            - name: DYNAMIC_CONFIG_FILE_PATH
              value: config/dynamicconfig/development.yaml
            - name: PRIMARY_FRONTEND_SERVICE
              value: cadence-frontend.{{ $.Release.Namespace }}.svc.cluster.local
            - name: LOG_LEVEL
              value: {{ $.Values.log.level }}
            - name: LOG_STDOUT
              value: {{ $.Values.log.stdout | quote }}
            - name: ENABLE_ES
              value: "false"
            - name: SKIP_SCHEMA_SETUP
              value: "true"
            - name: RINGPOP_BOOTSTRAP_MODE
              value: dns
            - name: RINGPOP_SEEDS
              value: cadence-frontend-headless.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.frontend.port }},cadence-history-headless.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.history.port }},cadence-matching-headless.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.matching.port }},cadence-worker-headless.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.worker.port }}

          resources:
            limits:
              cpu: {{ $serviceCfg.cpu.limit }}
              memory: {{ $serviceCfg.memory.limit }}
            requests:
              cpu: {{ $serviceCfg.cpu.request }}
              memory: {{ $serviceCfg.memory.request }}
      volumes:
        - name: config
          configMap:
            name: cadence-configmap
---
{{- end }}
