{{- range $serviceName := (list "frontend" "history" "matching" "worker") }}
{{- $service := index $.Values $serviceName }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cadence.fullname" $ }}-{{ $serviceName }}
  labels:
    {{- include "cadence.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ $serviceName }}
spec:
  replicas: {{ $service.replicas }}
  {{- with $service.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cadence.serviceLabels" (dict "serviceName" $serviceName "Values" $.Values "Chart" $.Chart "Release" $.Release) | indent 6 }}
  template:
    metadata:
      {{- $servicePodAnnotations := $service.podAnnotations | default dict }}
      {{- if $servicePodAnnotations }}
      annotations:
        {{- toYaml $servicePodAnnotations | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cadence.labels" $ | nindent 8 }}
        {{- with $service.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        app.kubernetes.io/component: {{ $serviceName }}
    spec:
      {{- if $.Values.serviceAccount.create }}
      serviceAccountName: {{ include "cadence.serviceAccountName" $ }}
      {{- end }}
      {{- $globalImagePullSecrets := $.Values.global.imagePullSecrets | default list }}
      {{- $serviceImagePullSecrets := $service.image.imagePullSecrets | default list }}
      {{- $mergedImagePullSecrets := concat $globalImagePullSecrets $serviceImagePullSecrets }}
      {{- if $mergedImagePullSecrets }}
      imagePullSecrets:
        {{- toYaml $mergedImagePullSecrets | nindent 8 }}
      {{- end }}
      {{- $globalPriorityClassName := $.Values.global.priorityClassName | default "" }}
      {{- $servicePriorityClassName := $service.priorityClassName | default $globalPriorityClassName }}
      {{- if $servicePriorityClassName }}
      priorityClassName: {{ $servicePriorityClassName }}
      {{- end }}
      {{- $globalPodSecurityContext := $.Values.global.podSecurityContext | default dict }}
      {{- $servicePodSecurityContext := $service.podSecurityContext | default $globalPodSecurityContext }}
      {{- if $servicePodSecurityContext }}
      securityContext:
        {{- toYaml $servicePodSecurityContext | nindent 8 }}
      {{- end }}
      {{- $globalNodeSelector := $.Values.global.nodeSelector | default dict }}
      {{- $serviceNodeSelector := $service.nodeSelector | default $globalNodeSelector }}
      {{- if $serviceNodeSelector }}
      nodeSelector:
        {{- toYaml $serviceNodeSelector | nindent 8 }}
      {{- end }}
      {{- $globalAffinity := $.Values.global.affinity | default dict }}
      {{- $serviceAffinity := $service.affinity | default $globalAffinity }}
      {{- if $serviceAffinity }}
      affinity:
        {{- toYaml $serviceAffinity | nindent 8 }}
      {{- end }}
      {{- $globalTolerations := $.Values.global.tolerations | default list }}
      {{- $serviceTolerations := $service.tolerations | default $globalTolerations }}
      {{- if $serviceTolerations }}
      tolerations:
        {{- toYaml $serviceTolerations | nindent 8 }}
      {{- end }}
      {{- $globalTopologySpreadConstraints := $.Values.global.topologySpreadConstraints | default list }}
      {{- $serviceTopologySpreadConstraints := $service.topologySpreadConstraints | default $globalTopologySpreadConstraints }}
      {{- if $serviceTopologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml $serviceTopologySpreadConstraints | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-schema
          {{- $globalImage := $.Values.global.image | default dict }}
          {{- $serviceImage := $service.image | default dict }}
          {{- $repository := $serviceImage.repository | default $globalImage.repository }}
          {{- $tag := $serviceImage.tag | default $globalImage.tag }}
          image: {{ $repository }}:{{ $tag }}
          {{- $pullPolicy := $serviceImage.pullPolicy | default $globalImage.pullPolicy | default "IfNotPresent" }}
          imagePullPolicy: {{ $pullPolicy }}
          command: ["sh", "-c", "
            until cqlsh $CASSANDRA_ENDPOINT 9042 -e \"
              USE cadence;
              SELECT curr_version FROM schema_version WHERE keyspace_name = 'cadence';\" | grep -q {{ $.Values.cassandra.schema.version }} &&
            cqlsh $CASSANDRA_ENDPOINT 9042 -e \"
              USE cadence_visibility;
              SELECT curr_version FROM schema_version WHERE keyspace_name = 'cadence_visibility';\" | grep -q {{ $.Values.cassandra.schema.visibility_version }};
            do
              echo waiting for both cadence and cadence_visibility schema setup;
              sleep 10;
            done"]
          env:
            - name: CASSANDRA_ENDPOINT
              value: {{ include "cassandra.endpoint" $ }}
      containers:
      - name: cadence-{{ $serviceName }}
        {{- $globalImage := $.Values.global.image | default dict }}
        {{- $serviceImage := $service.image | default dict }}
        {{- $repository := $serviceImage.repository | default $globalImage.repository }}
        {{- $tag := $serviceImage.tag | default $globalImage.tag }}
        image: {{ $repository }}:{{ $tag }}
        {{- $pullPolicy := $serviceImage.pullPolicy | default $globalImage.pullPolicy | default "IfNotPresent" }}
        imagePullPolicy: {{ $pullPolicy }}
        {{- $globalContainerSecurityContext := $.Values.global.containerSecurityContext | default dict }}
        {{- $serviceContainerSecurityContext := $service.containerSecurityContext | default $globalContainerSecurityContext }}
        {{- if $serviceContainerSecurityContext }}
        securityContext:
          {{- toYaml $serviceContainerSecurityContext | nindent 10 }}
        {{- end }}
        ports:
        - name: rpc
          containerPort: {{ $service.port }}
          protocol: TCP
        {{- if ne $serviceName "worker" }}
        - name: grpc
          containerPort: {{ $service.grpcPort }}
          protocol: TCP
        {{- end }}
        {{- if $.Values.metrics.enabled }}
        - name: {{ $.Values.metrics.portName | default "metrics" }}
          containerPort: {{ $.Values.metrics.port | default 9090 }}
          protocol: TCP
        {{- end }}
        volumeMounts:
        - name: config
          mountPath: /etc/cadence/config/config_template.yaml
          subPath: config_template.yaml
        - name: config
          mountPath: {{ $.Values.config.dynamicConfigFilePath | default "/etc/cadence/config/dynamicconfig/config.yaml" }}
          subPath: dynamic_config.yaml
        {{- $globalTlsVolumeMounts := $.Values.global.tls.volumeMounts | default list }}
        {{- if $globalTlsVolumeMounts }}
        {{- toYaml $globalTlsVolumeMounts | nindent 8 }}
        {{- end }}
        env:
        - name: SERVICES
          value: {{ $serviceName }}
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: PRIMARY_FRONTEND_SERVICE
          value: {{ include "cadence.fullname" $ }}-frontend.{{ $.Release.Namespace }}.svc.cluster.local
        - name: CASSANDRA_SEEDS
          value: {{ include "cassandra.endpoint" $ }}
        {{- $globalLog := $.Values.global.log | default dict }}
        {{- $serviceLog := $service.log | default $globalLog }}
        - name: LOG_LEVEL
          value: {{ $serviceLog.level | default "info" | quote }}
        - name: LOG_STDOUT
          value: {{ $serviceLog.stdout | default true | quote }}
        {{- $globalEnv := $.Values.global.env | default list }}
        {{- $serviceEnv := $service.env | default list }}
        {{- $mergedEnv := concat $globalEnv $serviceEnv }}
        {{- if $mergedEnv }}
        {{- toYaml $mergedEnv | nindent 8 }}
        {{- end }}
        {{- $globalSecrets := $.Values.global.secretEnv | default list }}
        {{- $serviceSecrets := $service.secretEnv | default list }}
        {{- $mergedSecrets := concat $globalSecrets $serviceSecrets }}
        {{- if $mergedSecrets }}
        envFrom:
        - secretRef:
            name: {{ include "cadence.fullname" $ }}-{{ $serviceName }}-secrets
        {{- end }}
        {{- with $service.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "cadence.fullname" $ }}-configmap
      {{- $globalTlsVolumes := $.Values.global.tls.volumes | default list }}
      {{- if $globalTlsVolumes }}
      {{- toYaml $globalTlsVolumes | nindent 6 }}
      {{- end }}
{{- end }}